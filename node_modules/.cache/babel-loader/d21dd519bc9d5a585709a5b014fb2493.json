{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  show: true\n}; //דרך עדכנית לצור 'סטט' חדש\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    toggle(state) {\n      state.show = !state.show;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;\nexport const counterAction = counterSlice.actions; //עכשיו האקשן נוצר עבורנו\n//counterAction.increment/decrement\n//דרך ישנה ליצור רדוסר\n// const conuterReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case \"increment\":\n//             return {\n//                 show: true,\n//                 counter: state.counter + action.payload\n//             };\n//         case 'decrement':\n//             return {\n//                 show: true,\n//                 counter: state.counter - 1\n//             };\n//         case \"toggle\":\n//             return {\n//                 ...state,\n//                 show: !state.show\n//             };\n//         default:\n//             return state\n//     }\n// }\n// const store = createStore(conuterReducer);","map":{"version":3,"sources":["C:/Users/ישראלה/Desktop/01-starting-project/src/store/index.js"],"names":["createStore","createSlice","configureStore","initialState","counter","show","counterSlice","name","reducers","increment","state","action","payload","decrement","toggle","store","reducer","counterAction","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAArB,C,CAGA;;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBO,MAAM,CAACC,OAAvC;AACH,KAHK;;AAINC,IAAAA,SAAS,CAACH,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KANK;;AAONU,IAAAA,MAAM,CAACJ,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACL,IAAN,GAAa,CAACK,KAAK,CAACL,IAApB;AACH;;AATK;AAHmB,CAAD,CAAhC;AAgBA,MAAMU,KAAK,GAAGb,cAAc,CAAC;AACzBc,EAAAA,OAAO,EAAEV,YAAY,CAACU;AADG,CAAD,CAA5B;AAKA,eAAeD,KAAf;AACA,OAAO,MAAME,aAAa,GAAGX,YAAY,CAACY,OAAnC,C,CAA4C;AACnD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["import { createStore } from 'redux';\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { counter: 0, show: true };\r\n\r\n\r\n//דרך עדכנית לצור 'סטט' חדש\r\nconst counterSlice = createSlice({\r\n    name: \"counter\",\r\n    initialState,\r\n    reducers: {\r\n        increment(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        toggle(state) {\r\n            state.show = !state.show;\r\n        },\r\n    }\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer: counterSlice.reducer\r\n});\r\n\r\n\r\nexport default store;\r\nexport const counterAction = counterSlice.actions; //עכשיו האקשן נוצר עבורנו\r\n//counterAction.increment/decrement\r\n\r\n\r\n//דרך ישנה ליצור רדוסר\r\n// const conuterReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case \"increment\":\r\n//             return {\r\n//                 show: true,\r\n//                 counter: state.counter + action.payload\r\n//             };\r\n//         case 'decrement':\r\n//             return {\r\n//                 show: true,\r\n//                 counter: state.counter - 1\r\n//             };\r\n//         case \"toggle\":\r\n//             return {\r\n//                 ...state,\r\n//                 show: !state.show\r\n//             };\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n\r\n// const store = createStore(conuterReducer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}