{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initiaCounterlState = {\n  counter: 0,\n  show: true\n};\nconst initialState = {\n  counter: 0,\n  show: true\n};\nconst initialAuthState = {\n  isAuth: false\n}; //דרך עדכנית לצור 'סטט' חדש\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state, action) {\n      state.counter = state.counter + action.payload;\n      state.show = true;\n    },\n\n    decrement(state) {\n      state.counter--;\n      state.show = true;\n    },\n\n    toggle(state) {\n      state.show = !state.show;\n    }\n\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuth = true;\n    },\n\n    logout(state) {\n      state.isAuth = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  // reducer: counterSlice.reducer\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: auth\n  }\n});\nexport default store;\nexport const counterActions = counterSlice.actions; //עכשיו האקשן נוצר עבורנו\n//counterAction.increment/decrement/toggle - ככה קוראים לאקשן מעכשיו\n//דרך ישנה ליצור רדוסר\n// const conuterReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case \"increment\":\n//             return {\n//                 show: true,\n//                 counter: state.counter + action.payload\n//             };\n//         case 'decrement':\n//             return {\n//                 show: true,\n//                 counter: state.counter - 1\n//             };\n//         case \"toggle\":\n//             return {\n//                 ...state,\n//                 show: !state.show\n//             };\n//         default:\n//             return state\n//     }\n// }\n// const store = createStore(conuterReducer);","map":{"version":3,"sources":["C:/Users/ישראלה/Desktop/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initiaCounterlState","counter","show","initialState","initialAuthState","isAuth","counterSlice","name","reducers","increment","state","action","payload","decrement","toggle","authSlice","login","logout","store","reducer","auth","counterActions","actions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAA5B;AACA,MAAMC,YAAY,GAAG;AAAEF,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAArB;AACA,MAAME,gBAAgB,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAzB,C,CAEA;;AACA,MAAMC,YAAY,GAAGR,WAAW,CAAC;AAC7BS,EAAAA,IAAI,EAAE,SADuB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACT,OAAN,GAAgBS,KAAK,CAACT,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACAF,MAAAA,KAAK,CAACR,IAAN,GAAa,IAAb;AACH,KAJK;;AAKNW,IAAAA,SAAS,CAACH,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACT,OAAN;AACAS,MAAAA,KAAK,CAACR,IAAN,GAAa,IAAb;AACH,KARK;;AASNY,IAAAA,MAAM,CAACJ,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACR,IAAN,GAAa,CAACQ,KAAK,CAACR,IAApB;AACH;;AAXK;AAHmB,CAAD,CAAhC;AAmBA,MAAMa,SAAS,GAAGjB,WAAW,CAAC;AAC1BS,EAAAA,IAAI,EAAE,MADoB;AAE1BH,EAAAA,gBAF0B;AAG1BI,EAAAA,QAAQ,EAAE;AACNQ,IAAAA,KAAK,CAACN,KAAD,EAAQ;AACTA,MAAAA,KAAK,CAACL,MAAN,GAAe,IAAf;AACH,KAHK;;AAINY,IAAAA,MAAM,CAACP,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACL,MAAN,GAAe,KAAf;AACH;;AANK;AAHgB,CAAD,CAA7B;AAcA,MAAMa,KAAK,GAAGnB,cAAc,CAAC;AACzB;AACAoB,EAAAA,OAAO,EAAC;AACJlB,IAAAA,OAAO,EAACK,YAAY,CAACa,OADjB;AAEJC,IAAAA,IAAI,EAAEA;AAFF;AAFiB,CAAD,CAA5B;AASA,eAAeF,KAAf;AACA,OAAO,MAAMG,cAAc,GAAGf,YAAY,CAACgB,OAApC,C,CAA6C;AACpD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["// import { createStore } from 'redux';\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initiaCounterlState = { counter: 0, show: true };\r\nconst initialState = { counter: 0, show: true };\r\nconst initialAuthState = { isAuth: false }\r\n\r\n//דרך עדכנית לצור 'סטט' חדש\r\nconst counterSlice = createSlice({\r\n    name: \"counter\",\r\n    initialState,\r\n    reducers: {\r\n        increment(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n            state.show = true;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n            state.show = true;\r\n        },\r\n        toggle(state) {\r\n            state.show = !state.show;\r\n        },\r\n    }\r\n})\r\n\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialAuthState,\r\n    reducers: {\r\n        login(state) {\r\n            state.isAuth = true;\r\n        },\r\n        logout(state) {\r\n            state.isAuth = false;\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst store = configureStore({\r\n    // reducer: counterSlice.reducer\r\n    reducer:{\r\n        counter:counterSlice.reducer,\r\n        auth: auth\r\n    }\r\n});\r\n\r\n\r\nexport default store;\r\nexport const counterActions = counterSlice.actions; //עכשיו האקשן נוצר עבורנו\r\n//counterAction.increment/decrement/toggle - ככה קוראים לאקשן מעכשיו\r\n\r\n\r\n//דרך ישנה ליצור רדוסר\r\n// const conuterReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case \"increment\":\r\n//             return {\r\n//                 show: true,\r\n//                 counter: state.counter + action.payload\r\n//             };\r\n//         case 'decrement':\r\n//             return {\r\n//                 show: true,\r\n//                 counter: state.counter - 1\r\n//             };\r\n//         case \"toggle\":\r\n//             return {\r\n//                 ...state,\r\n//                 show: !state.show\r\n//             };\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n\r\n// const store = createStore(conuterReducer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}