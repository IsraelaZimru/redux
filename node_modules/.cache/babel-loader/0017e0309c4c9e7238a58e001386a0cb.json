{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { authSlice } from './auth-slice';\nimport { counterSlice } from './counter-slice'; // const initialState = { counter: 0, show: true };\n// //דרך עדכנית לצור 'סטט' חדש\n// const counterSlice = createSlice({\n//     name: \"counter\",\n//     initialState,\n//     reducers: {\n//         increment(state, action) {\n//             state.counter = state.counter + action.payload;\n//             state.show = true;\n//         },\n//         decrement(state) {\n//             state.counter--;\n//             state.show = true;\n//         },\n//         toggle(state) {\n//             state.show = !state.show;\n//         },\n//     }\n// })\n// const authSlice = createSlice({\n//     name: 'auth',\n//     initialState: { isAuth: false },\n//     reducers: {\n//         login(state) {\n//             state.isAuth = true;\n//         },\n//         logout(state) {\n//             state.isAuth = false;\n//         }\n//     }\n// })\n\nconst store = configureStore({\n  // reducer: counterSlice.reducer\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport default store; //דרך ישנה ליצור רדוסר\n// const conuterReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case \"increment\":\n//             return {\n//                 show: true,\n//                 counter: state.counter + action.payload\n//             };\n//         case 'decrement':\n//             return {\n//                 show: true,\n//                 counter: state.counter - 1\n//             };\n//         case \"toggle\":\n//             return {\n//                 ...state,\n//                 show: !state.show\n//             };\n//         default:\n//             return state\n//     }\n// }\n// const store = createStore(conuterReducer);","map":{"version":3,"sources":["C:/Users/ישראלה/Desktop/01-starting-project/src/store/index.js"],"names":["configureStore","authSlice","counterSlice","store","reducer","counter","auth"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AACzB;AACAI,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAEH,YAAY,CAACE,OADjB;AAELE,IAAAA,IAAI,EAAEL,SAAS,CAACG;AAFX;AAFgB,CAAD,CAA5B;AASA,eAAeD,KAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { authSlice } from './auth-slice';\r\nimport { counterSlice } from './counter-slice';\r\n\r\n// const initialState = { counter: 0, show: true };\r\n\r\n// //דרך עדכנית לצור 'סטט' חדש\r\n// const counterSlice = createSlice({\r\n//     name: \"counter\",\r\n//     initialState,\r\n//     reducers: {\r\n//         increment(state, action) {\r\n//             state.counter = state.counter + action.payload;\r\n//             state.show = true;\r\n//         },\r\n//         decrement(state) {\r\n//             state.counter--;\r\n//             state.show = true;\r\n//         },\r\n//         toggle(state) {\r\n//             state.show = !state.show;\r\n//         },\r\n//     }\r\n// })\r\n\r\n\r\n// const authSlice = createSlice({\r\n//     name: 'auth',\r\n//     initialState: { isAuth: false },\r\n//     reducers: {\r\n//         login(state) {\r\n//             state.isAuth = true;\r\n//         },\r\n//         logout(state) {\r\n//             state.isAuth = false;\r\n//         }\r\n//     }\r\n// })\r\n\r\n\r\nconst store = configureStore({\r\n    // reducer: counterSlice.reducer\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        auth: authSlice.reducer\r\n    },\r\n});\r\n\r\n\r\nexport default store;\r\n\r\n\r\n\r\n//דרך ישנה ליצור רדוסר\r\n// const conuterReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case \"increment\":\r\n//             return {\r\n//                 show: true,\r\n//                 counter: state.counter + action.payload\r\n//             };\r\n//         case 'decrement':\r\n//             return {\r\n//                 show: true,\r\n//                 counter: state.counter - 1\r\n//             };\r\n//         case \"toggle\":\r\n//             return {\r\n//                 ...state,\r\n//                 show: !state.show\r\n//             };\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n\r\n// const store = createStore(conuterReducer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}